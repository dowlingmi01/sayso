<?php

// customer/starbar short name

$shortName = strtolower(Zend_Controller_Front::getInstance()->getRequest()->getControllerName()); 

?>
<script type="text/javascript">

    // base domain, etc per the current server environment
    
    if (!window.sayso) window.sayso = {};
    if (!window.sayso.baseDomain) {
        window.sayso.baseDomain = '<?= Registry::getConfig()->baseDomain ?>';
        window.sayso.environment = '<?= Registry::getPseudoEnvironmentName() ?>';
    }
</script>

<!-- SIMULATED customer login (popup) -->


<div id="simulate-login" style="background: white; opacity: 1; padding: 10px; margin: 15px; border: solid 2px black; width: 300px; font-family: Verdana; font-size: .8em; z-index: 10000; position: absolute; display: none;">
    <h2 style="margin: 2px;">Login <small id="simulate-login-status" style="font-size: .6em; color: green;"><?= $this->userLoggedIn ? '(logged in)' : '' ?></small></h2>
    <p style="margin: 2px;">Enter <strong>email</strong> to simulate user login</p>
    <small style="margin: 2px;">Changing email addresses (while the app is installed) simulates logging in as a different user</small>
    <form method="post" action="/client/<?= $shortName ?>/login">
        <p>
            <input type="hidden" name="uuid_type" value="<?= $this->uuidType ?>" />
            <input class="email" type="text" name="uuid" value="<?= $this->uuid ?>" style="width: 200px; font-size: 1.3em;" />&nbsp;<input class="submit" type="submit" name="simulate_submit" value="Login" />
        </p>
    </form>
</div>

<?= $this->partial($shortName . '/embed.phtml', array('shortName' => $shortName)) ?>

<script type="text/javascript">

    (function () {

        var sayso = window.sayso;

        var jQueryTimer = new jsLoadTimer();
        jQueryTimer.start('window.$SQ', function () { // note: jquery is loaded in the embed script
            
            // SIMULATED login form
            
            // since jquery.form is not namespaced, we transfer over the ref
            // back to jQuery/$ for it to use. This is safe in our simulated environ.
            jQuery = $ = $SQ; 
            
            var jQueryForm = document.createElement('script');         
            jQueryForm.src = 'http://' + sayso.baseDomain + '/js/jquery.form.min.js';
            document.getElementsByTagName('body')[0].appendChild(jQueryForm);
    
            var timer2 = new jsLoadTimer();
            timer2.start('typeof $SQ.fn.ajaxForm === "function"', function () {
                
                $SQ('#simulate-login form').ajaxForm({
                    url : $SQ(this).attr('action'),
                    type : 'post',
                    dataType : 'jsonp',
                    success : function (response) {
                        
                        $SQ('#simulate-login-status').text('(logged in)');
                        
                        var client = window.sayso.client,
                            data = response.data;
                        
                        client.name = data.name;
                        client.uuid = data.uuid;
                        client.uuidType = data.uuidType;
                        client.userLoggedIn = data.userLoggedIn
    
                        setTimeout(function() { $SQ('#simulate-login').fadeOut(); }, 1500);
                        
                        if (client.preInstallSetup) {
                            client.preInstallSetup();
                        }                            
                    }
                });
            });
        });
        
        function jsLoadTimer(){function c(){if(i++>g)return clearTimeout(a),false;else a=setTimeout(d,h)}function d(){try{if(eval(e))a&&clearTimeout(a),f();else return c()}catch(b){return c()}}var i=0,g=400,h=50,e="",f=null,a=null;this.setMaxCount=function(b){g=b};this.setInterval=function(b){h=b};this.setLocalReference=function(){};this.start=function(b,a){e=b;f=a;try{eval(e)?f():d()}catch(c){d()}}};

        
    })();
</script>